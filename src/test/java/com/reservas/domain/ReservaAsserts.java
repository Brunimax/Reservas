package com.reservas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReservaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReservaAllPropertiesEquals(Reserva expected, Reserva actual) {
        assertReservaAutoGeneratedPropertiesEquals(expected, actual);
        assertReservaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReservaAllUpdatablePropertiesEquals(Reserva expected, Reserva actual) {
        assertReservaUpdatableFieldsEquals(expected, actual);
        assertReservaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReservaAutoGeneratedPropertiesEquals(Reserva expected, Reserva actual) {
        assertThat(expected)
            .as("Verify Reserva auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReservaUpdatableFieldsEquals(Reserva expected, Reserva actual) {
        assertThat(expected)
            .as("Verify Reserva relevant properties")
            .satisfies(e -> assertThat(e.getDataChekin()).as("check dataChekin").isEqualTo(actual.getDataChekin()))
            .satisfies(e -> assertThat(e.getDataChekout()).as("check dataChekout").isEqualTo(actual.getDataChekout()))
            .satisfies(e -> assertThat(e.getDataReserva()).as("check dataReserva").isEqualTo(actual.getDataReserva()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReservaUpdatableRelationshipsEquals(Reserva expected, Reserva actual) {
        assertThat(expected)
            .as("Verify Reserva relationships")
            .satisfies(e -> assertThat(e.getAvaliacao()).as("check avaliacao").isEqualTo(actual.getAvaliacao()))
            .satisfies(e -> assertThat(e.getQuarto()).as("check quarto").isEqualTo(actual.getQuarto()))
            .satisfies(e -> assertThat(e.getPessoa()).as("check pessoa").isEqualTo(actual.getPessoa()));
    }
}
